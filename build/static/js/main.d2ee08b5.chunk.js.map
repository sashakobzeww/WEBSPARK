{"version":3,"sources":["Header/DateForm/DateForm.js","Header/Header.js","Main/Main.js","Main/Block/Block.js","App.js","serviceWorker.js","index.js","Header/img/logo.jpg"],"names":["DateForm","state","startDateFrom","Date","startDateTo","date","this","setState","className","dateFormat","selected","onSelect","handleSelectOrChangeFrom","bind","onChange","maxDate","handleSelectOrChangeTo","Component","Header","href","Main","blocks","idBlock","fromDay","fromLikes","fromComments","toDay","toLikes","toComments","imageUpload","map","block","id","makeList","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d2ee08b5.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport './DateForm.css'\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass DateForm extends Component {\r\n\r\n    state = {\r\n        startDateFrom: new Date(),\r\n        startDateTo: new Date()\r\n    };\r\n\r\n    handleSelectOrChangeFrom(date) {\r\n        this.setState({\r\n            startDateFrom: date\r\n        });\r\n    }\r\n\r\n    handleSelectOrChangeTo(date) {\r\n        this.setState({\r\n            startDateTo: date\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <div className=\"dateFormContainer\">\r\n                    <p>Date</p>\r\n                    <DatePicker\r\n                        dateFormat={\"dd.MM\"}\r\n                        selected={this.state.startDateFrom}\r\n                        onSelect={this.handleSelectOrChangeFrom.bind(this)}\r\n                        onChange={this.handleSelectOrChangeFrom.bind(this)}\r\n                        className=\"DatePickerFrom\"\r\n                    />\r\n                    <DatePicker\r\n                        dateFormat={\"dd.MM\"}\r\n                        maxDate={new Date()}\r\n                        selected={this.state.startDateTo}\r\n                        onSelect={this.handleSelectOrChangeTo.bind(this)}\r\n                        onChange={this.handleSelectOrChangeTo.bind(this)}\r\n                        className=\"DatePickerTo\"\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DateForm","import React, {Component} from 'react'\r\nimport './Header.css'\r\nimport logo from \"./img/logo.jpg\"\r\nimport DateForm from './DateForm/DateForm'\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n\r\n                <div className=\"left\">\r\n                    <a href=\"#\">\r\n                        <div className=\"logo\"></div>\r\n                    </a>\r\n                </div>\r\n\r\n                <div className=\"right\">\r\n                    <div className=\"top\">\r\n                        <p className=\"monblanproject\">monblanproject</p>\r\n                        <div className=\"start\">Start on 17-02-2016</div>\r\n                    </div>\r\n                    <ul className=\"info\">\r\n                        <li className=\"posts\"><span>870</span> posts</li>\r\n                        <li className=\"followers\"><span>11,787</span> followers</li>\r\n                        <li className=\"following\"><span>112</span> following</li>\r\n                    </ul>\r\n                    <DateForm/>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header\r\n\r\n","import React, {Component} from 'react'\r\nimport './Main.css'\r\nimport Block from './Block/Block'\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        blocks: [\r\n            {\r\n                idBlock: \"block_1\",\r\n                fromDay: \"Today\",\r\n                fromLikes: \"128\",\r\n                fromComments: \"31\",\r\n                toDay: \"09-08-2016\",\r\n                toLikes: \"67\",\r\n                toComments: \"22\",\r\n                imageUpload: '11-04-2016'\r\n            },\r\n            {\r\n                idBlock: \"block_2\",\r\n                fromDay: \"Today\",\r\n                fromLikes: \"12,800\",\r\n                fromComments: \"3,100\",\r\n                toDay: \"09-08-2016\",\r\n                toLikes: \"67\",\r\n                toComments: \"22\",\r\n                imageUpload: '11-04-2016'\r\n            },\r\n            {\r\n                idBlock: \"block_3\",\r\n                fromDay: \"Today\",\r\n                fromLikes: \"327\",\r\n                fromComments: \"945\",\r\n                toDay: \"09-08-2016\",\r\n                toLikes: \"78\",\r\n                toComments: \"96\",\r\n                imageUpload: '11-04-2016'\r\n            },\r\n            {\r\n                idBlock: \"block_4\",\r\n                fromDay: \"Today\",\r\n                fromLikes: \"684\",\r\n                fromComments: \"153\",\r\n                toDay: \"09-08-2016\",\r\n                toLikes: \"37\",\r\n                toComments: \"12\",\r\n                imageUpload: '11-04-2016'\r\n            },\r\n            {\r\n                idBlock: \"block_5\",\r\n                fromDay: \"Today\",\r\n                fromLikes: \"358\",\r\n                fromComments: \"657\",\r\n                toDay: \"09-08-2016\",\r\n                toLikes: \"78\",\r\n                toComments: \"12\",\r\n                imageUpload: '11-04-2016'\r\n            },\r\n            {\r\n                idBlock: \"block_6\",\r\n                fromDay: \"Today\",\r\n                fromLikes: \"429\",\r\n                fromComments: \"943\",\r\n                toDay: \"09-08-2016\",\r\n                toLikes: \"37\",\r\n                toComments: \"43\",\r\n                imageUpload: '11-04-2016'\r\n            },\r\n            {\r\n                idBlock: \"block_7\",\r\n                fromDay: \"Today\",\r\n                fromLikes: \"451\",\r\n                fromComments: \"951\",\r\n                toDay: \"09-08-2016\",\r\n                toLikes: \"83\",\r\n                toComments: \"49\",\r\n                imageUpload: '11-04-2016'\r\n            },\r\n            {\r\n                idBlock: \"block_8\",\r\n                fromDay: \"Today\",\r\n                fromLikes: \"789\",\r\n                fromComments: \"147\",\r\n                toDay: \"09-08-2016\",\r\n                toLikes: \"58\",\r\n                toComments: \"36\",\r\n                imageUpload: '11-04-2016'\r\n            },\r\n            {\r\n                idBlock: \"block_9\",\r\n                fromDay: \"Today\",\r\n                fromLikes: \"89\",\r\n                fromComments: \"19\",\r\n                toDay: \"09-08-2016\",\r\n                toLikes: \"82\",\r\n                toComments: \"64\",\r\n                imageUpload: '11-04-2016'\r\n            }\r\n        ]\r\n    }\r\n\r\n    makeList() {\r\n        const blocks = this.state.blocks;\r\n\r\n        const items = blocks.map((block) =>\r\n            <li className=\"block\" id={block.idBlock}>\r\n\r\n                <div className=\"video\"></div>\r\n\r\n                <div className=\"from\">\r\n                    <p className=\"fromDay\">{block.fromDay}</p>\r\n                    <p className=\"fromLikes\"><p></p>{block.fromLikes}</p>\r\n                    <p className=\"fromComments\"><p></p>{block.fromComments}</p>\r\n                </div>\r\n\r\n                <div className=\"to\">\r\n                    <p className=\"toDay\">{block.toDay}</p>\r\n                    <p className=\"toLikes\"><p></p>{block.toLikes}</p>\r\n                    <p className=\"toComments\"><p></p>{block.toComments}</p>\r\n                </div>\r\n\r\n                <div className=\"imageUpload\">Image upload: {block.imageUpload}</div>\r\n\r\n            </li>\r\n        )\r\n\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"blockContainer\">\r\n\r\n                <ul className=\"blocks\">\r\n                    {this.makeList()}\r\n                </ul>\r\n\r\n                <div className=\"loadMoreContainer\">\r\n                    <button className=\"loadMoreButton\">LOAD MORE</button>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main\r\n\r\n// todo Дейтпикер\r\n// todo Адаптивным сделать\r\n\r\n// todo Какие есть варианты вынесения кода блока в отдельный компонент?\r\n// todo Удалить все неиспользуемые файлы и строки","import React, {Component} from 'react'\r\nimport './Block.css'\r\n\r\nclass Block extends Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                djfnvjkdf\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Block","import React from 'react';\r\nimport './App.css';\r\nimport Header from './Header/Header'\r\nimport Main from './Main/Main'\r\n\r\nfunction App() {\r\n  return (\r\n      <>\r\n        <Header></Header>\r\n        <Main></Main>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.8f33a34c.jpg\";"],"sourceRoot":""}